1.1  "CountryCount" is a MapReduce job that calculates the count of countries based on data from the User and
messages files. It utilizes a reduce side join approach to efficiently combine the country information from the
User file and the count information from the messages file, aggregating counts per country. By performing the join
operation in the reducer, it reduces data transfer and improves the overall efficiency of the computation.
    - Run Command:
        ./gradlew run --args="1.1 hostname_country.csv access.log 1.1"
    - Input: hostname_country.csv and access.log files
    - Output: Unsorted list of countries and their counts (1.1)

1.2  "CountryCount2"  is a MapReduce job that calculates the count of countries based on input data. It employs a mapper
to extract country and count information, and a reducer to aggregate the counts per country. The final output is sorted
in descending order by count, providing a ranking of countries based on their counts.
    - Run Command:
        ./gradlew run --args="1.2 1.1/part-r-00000 1.2"
    - Input: Unsorted list of countries and their counts (1.1)
    - Output: List of countries and their counts, sorted by count high to low

2.1  "URLCountPerCountry" is a MapReduce job that counts the number of URLs per country.
It utilizes a reducer to perform a join operation between mappers handling user and messages files, generating
country and URL pairs. The choice of reduce side join was made due to its easier implementation and suitability
for larger datasets.
    - Run Command:
        ./gradlew run --args="2.1 hostname_country.csv access.log 2.1"
    - Input: hostname_country.csv and access.log files
    - Output: country + url associated with it (unsorted)

2.2  "URLCountPerCountry2" is a MapReduce job that further processes the country and URL pairs generated by the
previous URLCountPerCountry job. It includes a mapper that splits the input data and emits key-value pairs with a
count of 1. The reducer sums the counts per URL and sorts the results in descending order by count, producing the
final output of country and URL counts.
    - Run Command:
        ./gradlew run --args="2.2 2.1/part-r-00000 2.2"
    - Input: country + url associated with it (unsorted)
    - Output: Country + url + count, sorted by country alphabetically ascending and then count descending


3.1  "CountriesPerURL" is a MapReduce job that combines data from the HostCountryMapper and LogMapper to associate
countries with URLs. It employs a reducer to perform the join operation and produce country and URL pairs. The output
consists of URL-country pairs. Reduce-side join minimizes data transfer and improves performance when handling large
datasets, making it a suitable choice for this scenario.
    - Run Command:
        ./gradlew run --args="3.1 hostname_country.csv access.log 3.1"
    - Input: hostname_country.csv and access.log files
    - Output: URL + country

3.2  "CountriesPerURL2" program utilizes a mapper to extract URLs and associated countries, and a reducer to
aggregate and combine the country information for each URL. The reducer employs a TreeMap to eliminate duplicates and
sort the countries alphabetically before generating the final output. The reduce side join approach is suitable for
this scenario as it efficiently combines the country information and avoids data duplication, resulting in a concise
and sorted list of countries per URL.
    - Run Command:
        ./gradlew run --args="3.2 3.1/part-r-00000 3.2"
    - Input: URL + country unsorted
    - Output: Sorted by URL (alphabetically, A-Z) and list country names (comma-delimited, sorted A-Z) on the same line
    as the URL
